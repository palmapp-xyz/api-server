{
    "openapi": "3.0.0",
    "info": {
        "title": "Oedi API",
        "description": "Oedi API powered by Firebase Functions and Moralis, base_url: https://us-central1-oedi-a1953.cloudfunctions.net/api ",
        "termsOfService": "",
        "version": "1.0.0"
    },
    "servers": [],
    "security": [
        {
            "JWT": []
        }
    ],
    "components": {
        "securitySchemes": {
            "JWT": {
                "type": "http",
                "scheme": "bearer"
            }
        },
        "schemas": {
            "Stream": {
                "description": "",
                "type": "object",
                "properties": {
                    "webhookUrl": {
                        "description": "Webhook URL to send stream data on",
                        "type": "string"
                    },
                    "triggers": {
                        "description": "Triggers to listen for on blockchain",
                        "type": "string"
                    }
                }
            },
            "Profile": {
                "description": "",
                "type": "object",
                "properties": {
                    "nft_image_url": {
                        "description": "NFT's image URL to be displayed on profile",
                        "type": "string"
                    },
                    "nft_contract_addr": {
                        "description": "user's NFT contract address",
                        "type": "string"
                    },
                    "nft_tokenId": {
                        "description": "user's NFT token ID on given contract",
                        "type": "string"
                    },
                    "bio": {
                        "description": "user's bio",
                        "type": "string"
                    },
                    "user_name": {
                        "description": "user's name",
                        "type": "string"
                    },
                    "sendbird_token": {
                        "description": "user's sendbird token\n...",
                        "type": "string"
                    }
                }
            },
            "AuthRequestMessage": {
                "description": "",
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": "object"
                    },
                    "networkType": {
                        "description": "The network type e.g 'evm'",
                        "type": "string"
                    },
                    "address": {
                        "description": "The address of the user",
                        "type": "string"
                    },
                    "chain": {
                        "description": "The chain of the network e.g '0x1' for Ethereum Mainnet",
                        "type": "string"
                    }
                }
            },
            "AuthIssueToken": {
                "description": "",
                "type": "object",
                "properties": {
                    "data": {
                        "description": "",
                        "type": "object"
                    },
                    "networkType": {
                        "description": "The network type e.g 'evm'",
                        "type": "string"
                    },
                    "message": {
                        "description": "The message that is signed by the user",
                        "type": "string"
                    },
                    "signature": {
                        "description": "The signature of the message",
                        "type": "string"
                    }
                }
            }
        }
    },
    "paths": {
        "/stream/create": {
            "post": {
                "deprecated": false,
                "summary": "Creates a new stream on Moralis server",
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stream object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "parameters": [],
                "tags": [
                    "Stream"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Stream"
                            }
                        }
                    },
                    "description": "Stream to be created",
                    "required": true
                }
            }
        },
        "/stream/update/:id": {
            "put": {
                "deprecated": false,
                "summary": "Updates a stream on Moralis server",
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stream object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "params",
                        "description": "Stream ID to be updated",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Stream"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Stream"
                            }
                        }
                    },
                    "description": "Stream to be updated",
                    "required": true
                }
            }
        },
        "/stream/getAll": {
            "get": {
                "deprecated": false,
                "summary": "Gets all streams on Moralis server",
                "security": [],
                "responses": {
                    "200": {
                        "description": "Stream object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "parameters": [],
                "tags": [
                    "Stream"
                ]
            }
        },
        "/stream/delete/:id": {
            "delete": {
                "deprecated": false,
                "summary": "Deletes a stream on Moralis server",
                "security": [],
                "responses": {
                    "200": {
                        "description": "Stream object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "params",
                        "description": "Stream ID to be deleted",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Stream"
                ]
            }
        },
        "/stream/:id/add": {
            "post": {
                "deprecated": false,
                "summary": "Adds an address to a stream",
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stream object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "params",
                        "description": "Stream ID where address is to be added",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Stream"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "description": "Address to be added",
                    "required": true
                }
            }
        },
        "/stream/:id/remove": {
            "post": {
                "deprecated": false,
                "summary": "Removes an address from a stream",
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stream object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "params",
                        "description": "Stream ID where address is to be removed",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Stream"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "description": "Address to be removed",
                    "required": true
                }
            }
        },
        "/stream/:id/list": {
            "get": {
                "deprecated": false,
                "summary": "Gets all addresses from a stream",
                "security": [],
                "responses": {
                    "200": {
                        "description": "Stream object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "params",
                        "description": "Stream ID where addresses are to be fetched",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Stream"
                ]
            }
        },
        "/profile/create": {
            "post": {
                "deprecated": false,
                "summary": "Creates a new user's profile on Firestore",
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profile object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "examples": {
                                    "example1": {
                                        "summary": "profile created",
                                        "value": {
                                            "message": "profile created"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [],
                "tags": [
                    "Profile"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Profile"
                            }
                        }
                    },
                    "description": "Profile to be created",
                    "required": true
                }
            }
        },
        "/profile/update": {
            "put": {
                "deprecated": false,
                "summary": "Updates a user's profile on Firestore",
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profile object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "examples": {
                                    "example1": {
                                        "summary": "profile updated",
                                        "value": {
                                            "message": "profile updated"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [],
                "tags": [
                    "Profile"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Profile"
                            }
                        }
                    },
                    "description": "Profile to be updated",
                    "required": true
                }
            }
        },
        "/profile/get/:id": {
            "get": {
                "deprecated": false,
                "summary": "Gets a user's profile on Firestore",
                "security": [],
                "responses": {
                    "200": {
                        "description": "Profile object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Profile"
                                },
                                "examples": {
                                    "example1": {
                                        "summary": "profile retrieved",
                                        "value": "{\n \"nft_image_url\": 'https://example.com/image.png',\n \"nft_contract_addr\": '0x1234567890abcdef1234567890abcdef12345678',\n \"nft_tokenId\": '123',\n \"bio\": 'This is user's bio',\n \"user_name\": 'nickname'\n ...\n\n }"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "params",
                        "description": "User ID to get profile",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Profile"
                ]
            }
        },
        "/profile/sendbird_token": {
            "get": {
                "deprecated": false,
                "summary": "Gets a user's sendbird_token from Firestore",
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "sendbird token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "examples": {
                                    "example1": {
                                        "summary": "sendbird token",
                                        "value": "{\n \"sendbird_token\": 'abcdef123451234567890abcdef1234567890abcdef12345678'\n\n }"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [],
                "tags": [
                    "Profile"
                ]
            }
        },
        "/profile/delete": {
            "delete": {
                "deprecated": false,
                "summary": "Deletes a user's profile on Firestore",
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "examples": {
                                    "example1": {
                                        "summary": "profile deleted",
                                        "value": {
                                            "message": "profile deleted"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [],
                "tags": [
                    "Profile"
                ]
            }
        },
        "/ext-moralis-auth-requestMessage": {
            "post": {
                "deprecated": false,
                "summary": "Request a message to be signed by the user. BaseURL: https://asia-northeast3-oedi-a1953.cloudfunctions.net",
                "security": [],
                "responses": {
                    "200": {
                        "description": "The response object containing the message needs to be signed by the user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "examples": {
                                    "example1": {
                                        "summary": "The response object containing the message needs to be signed by the user",
                                        "value": {
                                            "result": {
                                                "id": "ZJN2CfqMldUWgezVH",
                                                "message": "oedi-a1953.web.app wants you to sign in with your Ethereum account:\n0x1Efd3eFd7c78d98B155F724EB6A161C50d8CFbf0\n\nTo authenticate please sign this message.\n\nURI: https://oedi-a1953.web.app/\nVersion: 1\nChain ID: 1\nNonce: Cwt6fznrxgHvIXdvv\nIssued At: 2023-02-05T12:53:06.907Z\nExpiration Time: 2023-02-05T13:08:06.641Z\nNot Before: 2023-02-05T12:53:06.641Z",
                                                "profileId": "0xad339ed840cb8c4e8f33a6fd07672c53f1c35ed197ba49f1536b43e27cb8b4a8"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [],
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthRequestMessage"
                            },
                            "examples": {
                                "example1": {
                                    "summary": "The request object",
                                    "value": "{\n   \"data\": {\n   \"networkType\": \"evm\",\n   \"address\": \"0x1Efd3eFd7c78d98B155F724EB6A161C50d8CFbf0\",\n   \"chain\": \"0x1\"\n   }\n   }"
                                }
                            }
                        }
                    },
                    "description": "The request body object containing the data object with the networkType, address and chain",
                    "required": true
                }
            }
        },
        "/ext-moralis-auth-issueToken": {
            "post": {
                "deprecated": false,
                "summary": "Issue a token for the user after verifying the signature, BaseURL: https://asia-northeast3-oedi-a1953.cloudfunctions.net",
                "security": [],
                "responses": {
                    "200": {
                        "description": "The response object containing the auth token(custom token)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "examples": {
                                    "example1": {
                                        "summary": "The response object containing the auth token(custom token)",
                                        "value": {
                                            "result": {
                                                "token": "bXl0b2tlbg==23e4r23SDFasfdg"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [],
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthIssueToken"
                            },
                            "examples": {
                                "example1": {
                                    "summary": "The request body object",
                                    "value": "{\n  \"data\": {\n   \"networkType\": \"evm\",\n   \"message\": \"oedi-a1953.web.app wants you to sign in with your Ethereum account:\\n0x1Efd3eFd7c78d98B155F724EB6A161C50d8CFbf0\\n\\nTo authenticate please sign this message.\\n\\nURI: https://oedi-a1953.web.app/\\nVersion: 1\\nChain ID: 1\\nNonce: Cwt6fznrxgHvIXdvv\\nIssued At: 2023-02-05T12:53:06.907Z\\nExpiration Time: 2023-02-05T13:08:06.641Z\\nNot Before: 2023-02-05T12:53:06.641Z\",\n   \"signature\": \"0xEfd3eFEfd3eFEfd3eF1Efd3eFd7c78d98B155F724EB6A161C50d8CFbf0eFEfd3eF1Efd3eFd7c78d9d3eFEfd3eF1Efd3eFd7c78d98B155F724EB6A161C50d8CFbf0eFEfd3eF1Efd3eFd7c78d9\"\n   }\n   }"
                                }
                            }
                        }
                    },
                    "description": "The request body object containing the data object with the networkType, message and signature",
                    "required": true
                }
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": ""
        },
        {
            "name": "Profile",
            "description": ""
        },
        {
            "name": "Stream",
            "description": ""
        }
    ]
}
